{
  "E:\\MicroServices\\serverless-app": {
    "versionSfCore": null,
    "versionFramework": "4.1.11",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "servicePath": "E:\\MicroServices\\serverless-app",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "my-microservices",
      "provider": {
        "name": "aws",
        "runtime": "python3.9"
      },
      "plugins": [
        "serverless-offline"
      ],
      "functions": {
        "order_service": {
          "handler": "../order-service/order_service.lambda_handler",
          "events": [
            {
              "http": {
                "path": "order",
                "method": "get"
              }
            }
          ]
        },
        "product_service": {
          "handler": "../product-service/product_service.lambda_handler",
          "events": [
            {
              "http": {
                "path": "product",
                "method": "get"
              }
            }
          ]
        },
        "user_service": {
          "handler": "../user-service/user_service.lambda_handler",
          "events": [
            {
              "http": {
                "path": "user",
                "method": "get"
              }
            }
          ]
        }
      }
    },
    "serviceRawFile": "service: my-microservices\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.9\r\n\r\nplugins:\r\n  - serverless-offline\r\n\r\nfunctions:\r\n  order_service:\r\n    handler: ../order-service/order_service.lambda_handler\r\n    events:\r\n      - http:\r\n          path: order\r\n          method: get\r\n\r\n  product_service:\r\n    handler: ../product-service/product_service.lambda_handler\r\n    events:\r\n      - http:\r\n          path: product\r\n          method: get\r\n\r\n  user_service:\r\n    handler: ../user-service/user_service.lambda_handler\r\n    events:\r\n      - http:\r\n          path: user\r\n          method: get\r\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "AWS credentials missing or invalid. Run \"serverless\" to set up AWS credentials, or learn more in our docs: http://slss.io/aws-creds-setup. Original error from AWS: Could not load credentials from any providers",
      "code": "AWS_CREDENTIALS_MISSING"
    },
    "machineId": "956ea988620632131032d369d91b8837",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "6e830ae2-f2bc-4ca7-9cb2-26850bdb561f",
    "orgName": "urmia1university",
    "userId": "qgHbxdkw2cpJnrbJGr",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "urmia1university",
    "subscription": null,
    "userEmail": "rojinsh8080@gmail.com",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}